# Copyright (c) 2025, NVIDIA CORPORATION.
schema_version: 1

context:
  version: ${{ env.get("RAPIDS_PACKAGE_VERSION") }}
  minor_version: ${{ (version | split("."))[:2] | join(".") }}
  cuda_version: ${{ (env.get("RAPIDS_CUDA_VERSION") | split("."))[:2] | join(".") }}
  cuda_major: '${{ (env.get("RAPIDS_CUDA_VERSION") | split("."))[0] }}'
  date_string: '${{ env.get("RAPIDS_DATE_STRING") }}'
  py_version: ${{ env.get("RAPIDS_PY_VERSION") }}
  py_buildstring: ${{ py_version | version_to_buildstring }}
  head_rev: ${{ git.head_rev(".")[:8] }}
  linux64: ${{ linux and x86_64 }}

package:
  name: cuvs-bench
  version: ${{ version }}

source:
  path: ../../..

build:
  string: cuda${{ cuda_major }}_py${{ py_buildstring }}_${{ date_string }}_${{ head_rev }}
  script:
    content: |
      python -m pip install --no-build-isolation --no-deps --config-settings rapidsai.disable-cuda=true ./python/cuvs_bench

requirements:
  host:
    - cuda-version =${{ cuda_version }}
    - libcuvs =${{ version }}
    - libcuvs-bench-ann =${{ version }}
    - python =${{ py_version }}
    - pip
    - rapids-build-backend >=0.3.0,<0.4.0.dev0
    - rmm =${{ minor_version }}
    - setuptools >=64.0.0
  run:
    - ${{ pin_compatible("cuda-version", upper_bound="x", lower_bound="x") }}
    - benchmark
    - click
    - cuvs =${{ version }}
    - glog ${{ glog_version }}
    - h5py ${{ h5py_version }}
    - libcuvs-bench-ann =${{ version }}
    - matplotlib-base
    - pandas
    - pylibraft =${{ minor_version }}
    - python
    - pyyaml
    - requests
    # rmm is needed to determine if package is gpu-enabled
    - rmm =${{ minor_version }}
    - scikit-learn>=1.5
    - if: linux64
      then: mkl =2023
    - if: cuda_major == "11"
      then:
        - cudatoolkit
      else:
        - cuda-cudart
        - cupy >=12.0.0
        - libcublas
  ignore_run_exports:
    by_name:
      - cuda-version
      - cuda-cudart
      - glog
      - libaio
      - libboost
      - libcublas
      - mkl
      - if: cuda_major == "11"
        then: cudatoolkit

tests:
  - script:
      - test lib/python${{ py_version }}/site-packages/cuvs_bench/config/datasets/datasets.yaml

about:
  homepage: ${{ load_from_file("python/cuvs_bench/pyproject.toml").project.urls.Homepage }}
  license: ${{ load_from_file("python/cuvs_bench/pyproject.toml").project.license.text }}
  summary: ${{ load_from_file("python/cuvs_bench/pyproject.toml").project.description }}
