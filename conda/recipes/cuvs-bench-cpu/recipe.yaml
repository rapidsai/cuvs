# SPDX-FileCopyrightText: Copyright (c) 2025, NVIDIA CORPORATION.
# SPDX-License-Identifier: Apache-2.0
schema_version: 1

context:
  version: ${{ env.get("RAPIDS_PACKAGE_VERSION") }}
  date_string: '${{ env.get("RAPIDS_DATE_STRING") }}'
  py_version: ${{ env.get("RAPIDS_PY_VERSION") }}
  py_buildstring: ${{ py_version | version_to_buildstring }}
  head_rev: '${{ git.head_rev(".")[:8] }}'
  linux64: ${{ linux and x86_64 }}

package:
  name: cuvs-bench-cpu
  version: ${{ version }}

source:
  path: ../../..

build:
  string: py${{ py_buildstring }}_${{ date_string }}_${{ head_rev }}
  script:
    content: |

      # Remove `-fdebug-prefix-map` line from CFLAGS and CXXFLAGS so the
      # incrementing version number in the compile line doesn't break the
      # cache
      set -x
      export CFLAGS=$(echo $CFLAGS | sed -E 's@\-fdebug\-prefix\-map[^ ]*@@g')
      export CXXFLAGS=$(echo $CXXFLAGS | sed -E 's@\-fdebug\-prefix\-map[^ ]*@@g')
      set +x

      ./build.sh bench-ann --cpu-only --no-nvtx --build-metrics=bench_ann_cpu --incl-cache-stats
      cmake --install cpp/build --component ann_bench

    secrets:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
    env:
      CMAKE_C_COMPILER_LAUNCHER: ${{ env.get("CMAKE_C_COMPILER_LAUNCHER") }}
      CMAKE_CXX_COMPILER_LAUNCHER: ${{ env.get("CMAKE_CXX_COMPILER_LAUNCHER") }}
      CMAKE_GENERATOR: ${{ env.get("CMAKE_GENERATOR") }}
      PARALLEL_LEVEL: ${{ env.get("PARALLEL_LEVEL") }}
      RAPIDS_ARTIFACTS_DIR: ${{ env.get("RAPIDS_ARTIFACTS_DIR") }}
      SCCACHE_BUCKET: ${{ env.get("SCCACHE_BUCKET") }}
      SCCACHE_IDLE_TIMEOUT: ${{ env.get("SCCACHE_IDLE_TIMEOUT") }}
      SCCACHE_REGION: ${{ env.get("SCCACHE_REGION") }}
      SCCACHE_S3_USE_SSL: ${{ env.get("SCCACHE_S3_USE_SSL") }}
      SCCACHE_S3_NO_CREDENTIALS: ${{ env.get("SCCACHE_S3_NO_CREDENTIALS") }}
      SCCACHE_S3_KEY_PREFIX: cuvs-bench-cpu/${{ env.get("RAPIDS_CONDA_ARCH") }}

requirements:
  build:
    - ${{ compiler("c") }}
    - ${{ compiler("cxx") }}
    - cmake ${{ cmake_version }}
    - ninja
    - ${{ stdlib("c") }}
  host:
    - benchmark
    - glog ${{ glog_version }}
    - nlohmann_json ${{ nlohmann_json_version }}
    - openblas
    - pip
    - python =${{ py_version }}
    - rapids-build-backend>=0.4.0,<0.5.0.dev0
    - setuptools >=64.0.0
    - if: linux64
      then:
        - libaio
        - libboost-devel=1.87
        - mkl-devel=2023
  run:
    - benchmark
    - click
    - glog ${{ glog_version }}
    - h5py ${{ h5py_version }}
    - matplotlib-base>=3.9
    - numpy >=1.23,<3.0a0
    - pandas
    - pyyaml
    - python
    - requests
    - scikit-learn>=1.5
    - if: linux64
      then:
        - mkl =2023
  ignore_run_exports:
    by_name:
      - glog
      - libaio
      - libboost
      - libcublas
      - mkl  # relaxes pin from host `mkl-devel`


tests:
  - python:
      imports:
        - cuvs_bench
        - cuvs_bench.generate_groundtruth
        - cuvs_bench.get_dataset
        - cuvs_bench.plot
        - cuvs_bench.run
        - cuvs_bench.split_groundtruth
      pip_check: false

about:
  homepage: ${{ load_from_file("python/cuvs_bench/pyproject.toml").project.urls.Homepage }}
  license: ${{ load_from_file("python/cuvs_bench/pyproject.toml").project.license.text }}
  summary: cuVS CPU benchmark
