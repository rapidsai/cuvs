/*
 * SPDX-FileCopyrightText: Copyright (c) 2024, NVIDIA CORPORATION.
 * SPDX-License-Identifier: Apache-2.0
 */

/*
 * NOTE: this file is generated by generate_ivf_flat.py
 *
 * Make changes there and run in this directory:
 *
 * > python generate_ivf_flat.py
 *
 */

#include <cuvs/neighbors/ivf_flat.hpp>

#include "ivf_flat_build.cuh"

namespace cuvs::neighbors::ivf_flat {

#define CUVS_INST_IVF_FLAT_BUILD_EXTEND(T, IdxT)                                                 \
  auto build(raft::resources const& handle,                                                      \
             const cuvs::neighbors::ivf_flat::index_params& params,                              \
             raft::device_matrix_view<const T, IdxT, raft::row_major> dataset)                   \
    -> cuvs::neighbors::ivf_flat::index<T, IdxT>                                                 \
  {                                                                                              \
    return cuvs::neighbors::ivf_flat::index<T, IdxT>(                                            \
      std::move(cuvs::neighbors::ivf_flat::detail::build(handle, params, dataset)));             \
  }                                                                                              \
                                                                                                 \
  void build(raft::resources const& handle,                                                      \
             const cuvs::neighbors::ivf_flat::index_params& params,                              \
             raft::device_matrix_view<const T, IdxT, raft::row_major> dataset,                   \
             cuvs::neighbors::ivf_flat::index<T, IdxT>& idx)                                     \
  {                                                                                              \
    cuvs::neighbors::ivf_flat::detail::build(handle, params, dataset, idx);                      \
  }                                                                                              \
  auto build(raft::resources const& handle,                                                      \
             const cuvs::neighbors::ivf_flat::index_params& params,                              \
             raft::host_matrix_view<const T, IdxT, raft::row_major> dataset)                     \
    -> cuvs::neighbors::ivf_flat::index<T, IdxT>                                                 \
  {                                                                                              \
    return cuvs::neighbors::ivf_flat::index<T, IdxT>(                                            \
      std::move(cuvs::neighbors::ivf_flat::detail::build(handle, params, dataset)));             \
  }                                                                                              \
                                                                                                 \
  void build(raft::resources const& handle,                                                      \
             const cuvs::neighbors::ivf_flat::index_params& params,                              \
             raft::host_matrix_view<const T, IdxT, raft::row_major> dataset,                     \
             cuvs::neighbors::ivf_flat::index<T, IdxT>& idx)                                     \
  {                                                                                              \
    cuvs::neighbors::ivf_flat::detail::build(handle, params, dataset, idx);                      \
  }                                                                                              \
  auto extend(raft::resources const& handle,                                                     \
              raft::device_matrix_view<const T, IdxT, raft::row_major> new_vectors,              \
              std::optional<raft::device_vector_view<const IdxT, IdxT>> new_indices,             \
              const cuvs::neighbors::ivf_flat::index<T, IdxT>& orig_index)                       \
    -> cuvs::neighbors::ivf_flat::index<T, IdxT>                                                 \
  {                                                                                              \
    return cuvs::neighbors::ivf_flat::index<T, IdxT>(std::move(                                  \
      cuvs::neighbors::ivf_flat::detail::extend(handle, new_vectors, new_indices, orig_index))); \
  }                                                                                              \
                                                                                                 \
  void extend(raft::resources const& handle,                                                     \
              raft::device_matrix_view<const T, IdxT, raft::row_major> new_vectors,              \
              std::optional<raft::device_vector_view<const IdxT, IdxT>> new_indices,             \
              cuvs::neighbors::ivf_flat::index<T, IdxT>* idx)                                    \
  {                                                                                              \
    cuvs::neighbors::ivf_flat::detail::extend(handle, new_vectors, new_indices, idx);            \
  }                                                                                              \
  auto extend(raft::resources const& handle,                                                     \
              raft::host_matrix_view<const T, IdxT, raft::row_major> new_vectors,                \
              std::optional<raft::host_vector_view<const IdxT, IdxT>> new_indices,               \
              const cuvs::neighbors::ivf_flat::index<T, IdxT>& orig_index)                       \
    -> cuvs::neighbors::ivf_flat::index<T, IdxT>                                                 \
  {                                                                                              \
    return cuvs::neighbors::ivf_flat::index<T, IdxT>(std::move(                                  \
      cuvs::neighbors::ivf_flat::detail::extend(handle, new_vectors, new_indices, orig_index))); \
  }                                                                                              \
                                                                                                 \
  void extend(raft::resources const& handle,                                                     \
              raft::host_matrix_view<const T, IdxT, raft::row_major> new_vectors,                \
              std::optional<raft::host_vector_view<const IdxT, IdxT>> new_indices,               \
              cuvs::neighbors::ivf_flat::index<T, IdxT>* idx)                                    \
  {                                                                                              \
    cuvs::neighbors::ivf_flat::detail::extend(handle, new_vectors, new_indices, idx);            \
  }
CUVS_INST_IVF_FLAT_BUILD_EXTEND(int8_t, int64_t);

#undef CUVS_INST_IVF_FLAT_BUILD_EXTEND

}  // namespace cuvs::neighbors::ivf_flat
