# Dependency list for https://github.com/rapidsai/dependency-file-generator
files:
  all:
    output: conda
    matrix:
      cuda: ["12.9", "13.0"]
      arch: [x86_64, aarch64]
    includes:
      - build
      - build_cython
      - build_py_cuvs
      - build_wheels
      - checks
      - clang
      - cuda
      - cuda_version
      - depends_on_cuda_python
      - depends_on_cupy
      - depends_on_librmm
      - depends_on_pylibraft
      - depends_on_nccl
      - docs
      - rapids_build
      - run_py_cuvs
      - rust
      - go
      - test_libcuvs
      - test_python_common
      - test_py_cuvs
  bench_ann:
    output: conda
    matrix:
      cuda: ["12.9", "13.0"]
      arch: [x86_64, aarch64]
    includes:
      - bench
      - bench_python
      - build_cython
      - build_py_cuvs
      - clang
      - cuda
      - cuda_version
      - depends_on_cuda_python
      - depends_on_cupy
      - depends_on_pylibraft
      - depends_on_libcuvs
      - depends_on_librmm
      - depends_on_nccl
      - rapids_build
      - rapids_build_setuptools
  test_cpp:
    output: none
    includes:
      - cuda_version
      - test_libcuvs
      - depends_on_libcuvs
      - depends_on_libcuvs_tests
  test_python:
    output: none
    includes:
      - cuda_version
      - depends_on_cupy
      - py_version
      - test_python_common
      - test_py_cuvs
      - depends_on_libcuvs
      - depends_on_cuvs
      - depends_on_cuvs_bench
  checks:
    output: none
    includes:
      - checks
      - py_version
  docs:
    output: none
    includes:
      - clang
      - cuda
      - cuda_version
      - depends_on_cupy
      - docs
      - py_version
      - rapids_build
      - rust
      - depends_on_libcuvs
      - depends_on_cuvs
  rust:
    output: conda
    matrix:
      cuda: ["12.9", "13.0"]
      arch: [x86_64, aarch64]
    includes:
      # clang/libclang only needed for bindgen support
      - clang
      - cuda
      - cuda_version
      - rapids_build
      - rust
      - depends_on_libcuvs
      - depends_on_libraft
      - depends_on_nccl
  go:
    output: conda
    matrix:
      cuda: ["12.9", "13.0"]
      arch: [x86_64, aarch64]
    includes:
      - clang
      - cuda
      - cuda_version
      - rapids_build
      - go
      - depends_on_libcuvs
      - depends_on_libraft
      - depends_on_nccl
  java:
    output: none
    includes:
      - cuda
      - cuda_version
      - depends_on_libcuvs
      - depends_on_libraft
      - depends_on_nccl
      - java
      - rapids_build
  py_build_libcuvs:
    output: pyproject
    pyproject_dir: python/libcuvs
    extras:
      table: build-system
    includes:
      - build
  py_rapids_build_libcuvs:
    output: pyproject
    pyproject_dir: python/libcuvs
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - depends_on_libraft
      - depends_on_librmm
      - depends_on_nccl
      - rapids_build
  py_run_libcuvs:
    output: pyproject
    pyproject_dir: python/libcuvs
    extras:
      table: project
    includes:
      - cuda_wheels
      - depends_on_libraft
      - depends_on_librmm
      - depends_on_nccl
  py_build_cuvs:
    output: pyproject
    pyproject_dir: python/cuvs
    extras:
      table: build-system
    includes:
      - build
  py_rapids_build_cuvs:
    output: pyproject
    pyproject_dir: python/cuvs
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - build_cython
      - build_py_cuvs
      - depends_on_cuda_python
      - depends_on_libcuvs
      - depends_on_libraft
      - depends_on_librmm
      - rapids_build
  py_run_cuvs:
    output: pyproject
    pyproject_dir: python/cuvs
    extras:
      table: project
    includes:
      - depends_on_cuda_python
      - depends_on_libcuvs
      - depends_on_pylibraft
      - run_py_cuvs
  py_test_cuvs:
    output: pyproject
    pyproject_dir: python/cuvs
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - depends_on_cupy
      - test_python_common
      - test_py_cuvs
  py_build_cuvs_bench:
    output: pyproject
    pyproject_dir: python/cuvs_bench
    extras:
      table: build-system
    includes:
      - rapids_build_setuptools
  py_rapids_build_cuvs_bench:
    output: pyproject
    pyproject_dir: python/cuvs_bench
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes: []
  py_run_cuvs_bench:
    output: pyproject
    pyproject_dir: python/cuvs_bench
    extras:
      table: project
    includes:
      - bench_python
channels:
  - rapidsai
  - rapidsai-nightly
  - conda-forge
dependencies:
  build:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - &rapids_build_backend rapids-build-backend>=0.4.0,<0.5.0.dev0
      - output_types: [conda]
        packages:
          - scikit-build-core>=0.10.0
      - output_types: [requirements, pyproject]
        packages:
          - scikit-build-core[pyproject]>=0.10.0
  build_cython:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - cython>=3.0.0
  rapids_build:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - &cmake_ver cmake>=3.30.4
          - ninja
      - output_types: [conda]
        packages:
          - c-compiler
          - cuda-nvcc
          - cxx-compiler
    specific:
      - output_types: conda
        matrices:
          - matrix:
              arch: x86_64
            packages:
              - gcc_linux-64=14.*
              - sysroot_linux-64==2.28
          - matrix:
              arch: aarch64
            packages:
              - gcc_linux-aarch64=14.*
              - sysroot_linux-aarch64==2.28
  rapids_build_setuptools:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - *rapids_build_backend
          - setuptools
          - wheel
  build_py_cuvs:
    common:
      - output_types: [conda]
        packages:
          - dlpack>=0.8,<1.0
  checks:
    common:
      - output_types: [conda, requirements]
        packages:
          - pre-commit
  clang:
    common:
      - output_types: conda
        packages:
          - clang==20.1.4
          - clang-tools==20.1.4
          - libclang==20.1.4
  cuda_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "12.2"
            packages:
              - cuda-version=12.2
          - matrix:
              cuda: "12.5"
            packages:
              - cuda-version=12.5
          - matrix:
              cuda: "12.8"
            packages:
              - cuda-version=12.8
          - matrix:
              cuda: "12.9"
            packages:
              - cuda-version=12.9
          - matrix:
              cuda: "13.0"
            packages:
              - cuda-version=13.0
  cuda:
    common:
      - output_types: [conda]
        packages:
          - cuda-nvtx-dev
          - cuda-cudart-dev
          - cuda-profiler-api
          - libcublas-dev
          - libcurand-dev
          - libcusolver-dev
          - libcusparse-dev
  cuda_wheels:
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              use_cuda_wheels: "true"
            packages:
              - cuda-toolkit[cublas,curand,cusolver,cusparse]==12.*
          - matrix:
              cuda: "13.*"
              use_cuda_wheels: "true"
            packages:
              - cuda-toolkit[cublas,curand,cusolver,cusparse]==13.*
          - matrix:
              use_cuda_wheels: "false"
            packages:
          # if no matching matrix selectors passed, list a range
          # (just as a source of documentation, as this populates pyproject.toml in source control)
          - matrix:
            packages:
              - cuda-toolkit[cublas,curand,cusolver,cusparse]>=12,<14
  depends_on_cupy:
    common:
      - output_types: conda
        packages:
          - cupy>=13.6.0
    # NOTE: This is intentionally not broken into groups by a 'cuda_suffixed' selector like
    #       other packages with -cu{nn}x suffixes in this file.
    #       All RAPIDS wheel builds (including in devcontainers) expect cupy to be suffixed.
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - cupy-cuda12x>=13.6.0
          # fallback to CUDA 13 versions if 'cuda' is '13.*' or not provided
          - matrix:
            packages:
              - &cupy_cu13 cupy-cuda13x>=13.6.0
  test_libcuvs:
    common:
      - output_types: [conda]
        packages:
          - *cmake_ver
          - openblas
  docs:
    common:
      - output_types: [conda]
        packages:
          - breathe>=4.35.0
          - doxygen>=1.8.20
          - graphviz
          - ipython
          - numpydoc
          - recommonmark
          - sphinx>=8.0.0
          - sphinx-copybutton
          - sphinx-markdown-tables
          - pip:
              - nvidia-sphinx-theme
  rust:
    common:
      - output_types: [conda]
        packages:
          - make
          - rust
  go:
    common:
      - output_types: [conda]
        packages:
          - go
          - _go_select *=cgo
          - dlpack>=0.8,<1.0
  build_wheels:
    common:
      - output_types: [requirements, pyproject]
        packages:
          - wheel
          - setuptools
  py_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              py: "3.10"
            packages:
              - python=3.10
          - matrix:
              py: "3.11"
            packages:
              - python=3.11
          - matrix:
              py: "3.12"
            packages:
              - python=3.12
          - matrix:
              py: "3.13"
            packages:
              - python=3.13
          - matrix:
            packages:
              - python>=3.10,<3.14
  run_py_cuvs:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - &numpy numpy>=1.23,<3.0a0
  test_python_common:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - pytest
          - pytest-cov
  test_py_cuvs:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - scikit-learn
  java:
    common:
      - output_types: conda
        packages:
          - *cmake_ver
          - libboost-devel
          - maven
          - openjdk=22.*
  bench:
    common:
      - output_types: [conda, pyproject, requirements]
        packages:
          - nlohmann_json>=3.12.0
          - glog>=0.6.0
          - h5py>=3.8.0
          - benchmark>=1.8.2
          - openblas
    specific:
      - output_types: conda
        matrices:
          - matrix:
              arch: x86_64
            packages:
              - mkl-devel=2023
              - libaio
              - libboost-devel=1.87
          - matrix:
              arch: aarch64
            packages: null
  bench_python:
    common:
      - output_types: [conda, pyproject, requirements]
        packages:
          - click
          - cuvs==25.12.*,>=0.0.0a0
          - pandas
          - pyyaml
          - requests
          - scikit-learn
      - output_types: [conda]
        packages:
          - matplotlib-base>=3.9
      - output_types: [requirements, pyproject]
        packages:
          - matplotlib>=3.9
  depends_on_cuda_python:
    specific:
      - output_types: [conda, requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - cuda-python>=12.9.2,<13.0a0
          # fallback to CUDA 13 versions if 'cuda' is '13.*' or not provided
          - matrix:
            packages:
              - cuda-python>=13.0.1,<14.0a0
  depends_on_cuvs:
    common:
      - output_types: conda
        packages:
          - cuvs==25.12.*,>=0.0.0a0
  depends_on_cuvs_bench:
    common:
      - output_types: conda
        packages:
          - cuvs-bench==25.12.*,>=0.0.0a0
  depends_on_libcuvs:
    common:
      - output_types: conda
        packages:
          - &libcuvs_unsuffixed libcuvs==25.12.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - libcuvs-cu12==25.12.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - libcuvs-cu13==25.12.*,>=0.0.0a0
          - {matrix: null, packages: [*libcuvs_unsuffixed]}
  depends_on_libcuvs_tests:
    common:
      - output_types: conda
        packages:
          - libcuvs-tests==25.12.*,>=0.0.0a0
  depends_on_libraft:
    common:
      - output_types: conda
        packages:
          - &libraft_unsuffixed libraft==25.12.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - libraft-cu12==25.12.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - libraft-cu13==25.12.*,>=0.0.0a0
          - {matrix: null, packages: [*libraft_unsuffixed]}
  depends_on_librmm:
    common:
      - output_types: conda
        packages:
          - &librmm_unsuffixed librmm==25.12.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - librmm-cu12==25.12.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - librmm-cu13==25.12.*,>=0.0.0a0
          - {matrix: null, packages: [*librmm_unsuffixed]}
  depends_on_pylibraft:
    common:
      - output_types: conda
        packages:
          - &pylibraft_unsuffixed pylibraft==25.12.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - pylibraft-cu12==25.12.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - pylibraft-cu13==25.12.*,>=0.0.0a0
          - {matrix: null, packages: [*pylibraft_unsuffixed]}
  depends_on_nccl:
    common:
      - output_types: conda
        packages:
          - nccl>=2.19
    specific:
      - output_types: [pyproject, requirements]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - nvidia-nccl-cu12>=2.19
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - nvidia-nccl-cu13>=2.19
          - matrix:
            packages:
