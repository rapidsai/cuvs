# Dependency list for https://github.com/rapidsai/dependency-file-generator
files:
  all:
    output: conda
    matrix:
      cuda: ["11.8", "12.2"]
      arch: [x86_64, aarch64]
    includes:
      - build
      - rapids_build
      - build_py_cuvs
      - cuda
      - cuda_version
      - develop
      - checks
      - build_wheels
      - test_libcuvs
      - docs
      - run_py_cuvs
      - test_python_common
      - test_py_cuvs
      - cupy
      - rust
  test_cpp:
    output: none
    includes:
      - cuda_version
      - test_libcuvs
  test_python:
    output: none
    includes:
      - cuda_version
      - py_version
      - test_python_common
      - test_py_cuvs
      - cupy
  checks:
    output: none
    includes:
      - checks
      - py_version
  docs:
    output: none
    includes:
      - cuda_version
      - cupy
      - docs
      - py_version
      - rust
      - rapids_build
      - cuda
  rust:
    output: none
    includes:
      - cuda_version
      - rapids_build
      - cuda
      - rust
  py_build_py_cuvs:
    output: pyproject
    pyproject_dir: python/cuvs
    extras:
      table: build-system
    includes:
      - build
  py_rapids_build_py_cuvs:
    output: pyproject
    pyproject_dir: python/cuvs
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - rapids_build
      - build_py_cuvs
  py_run_py_cuvs:
    output: pyproject
    pyproject_dir: python/cuvs
    extras:
      table: project
    includes:
      - run_py_cuvs
  py_test_py_cuvs:
    output: pyproject
    pyproject_dir: python/cuvs
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python_common
      - test_py_cuvs
      - cupy
channels:
  - rapidsai
  - rapidsai-nightly
  - dask/label/dev
  - conda-forge
  - nvidia
dependencies:
  build:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - rapids-build-backend>=0.3.0,<0.4.0.dev0
      - output_types: [conda]
        packages:
          - scikit-build-core>=0.7.0
      - output_types: [requirements, pyproject]
        packages:
          - scikit-build-core[pyproject]>=0.7.0
  rapids_build:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - &cmake_ver cmake>=3.26.4,!=3.30.0
          - cython>=3.0.0
          - ninja
      - output_types: [conda]
        packages:
          - c-compiler
          - cxx-compiler
          - nccl>=2.9.9
    specific:
      - output_types: conda
        matrices:
          - matrix:
              arch: x86_64
            packages:
              - gcc_linux-64=11.*
              - sysroot_linux-64==2.17
          - matrix:
              arch: aarch64
            packages:
              - gcc_linux-aarch64=11.*
              - sysroot_linux-aarch64==2.17
      - output_types: conda
        matrices:
          - matrix: {cuda: "12.*"}
            packages: [cuda-nvcc]
          - matrix: {cuda: "11.8", arch: x86_64}
            packages: [nvcc_linux-64=11.8]
          - matrix: {cuda: "11.8", arch: aarch64}
            packages: [nvcc_linux-aarch64=11.8]
          - matrix: {cuda: "11.5", arch: x86_64}
            packages: [nvcc_linux-64=11.5]
          - matrix: {cuda: "11.5", arch: aarch64}
            packages: [nvcc_linux-aarch64=11.5]
          - matrix: {cuda: "11.4", arch: x86_64}
            packages: [nvcc_linux-64=11.4]
          - matrix: {cuda: "11.4", arch: aarch64}
            packages: [nvcc_linux-aarch64=11.4]
          - matrix: {cuda: "11.2", arch: x86_64}
            packages: [nvcc_linux-64=11.2]
          - matrix: {cuda: "11.2", arch: aarch64}
            packages: [nvcc_linux-aarch64=11.2]

  build_py_cuvs:
    common:
      - output_types: [conda]
        packages:
          - &rmm_conda rmm==24.8.*,>=0.0.0a0
          - &pylibraft_conda pylibraft==24.8.*,>=0.0.0a0
          - dlpack>=0.8,<1.0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          # This index is needed for rmm-cu{11,12}.
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [conda, requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - &cuda_python12 cuda-python>=12.0,<13.0a0
          - matrix:
              cuda: "11.*"
            packages:
              - &cuda_python11 cuda-python>=11.7.1,<12.0a0
          - matrix:
            packages:
              - &cuda_python cuda-python
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.*"}
            packages:
              - &rmm_cu12 rmm-cu12==24.8.*,>=0.0.0a0
              - &pylibraft_cu12 pylibraft-cu12==24.8.*,>=0.0.0a0
          - matrix: {cuda: "11.*"}
            packages:
              - &rmm_cu11 rmm-cu11==24.8.*,>=0.0.0a0
              - &pylibraft_cu11 pylibraft-cu11==24.8.*,>=0.0.0a0
          - {matrix: null, packages: [*rmm_conda, *pylibraft_conda] }
  checks:
    common:
      - output_types: [conda, requirements]
        packages:
          - pre-commit
  develop:
    common:
      - output_types: conda
        packages:
          - clang==16.0.6
          - clang-tools=16.0.6
  cuda_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "11.2"
            packages:
              - cuda-version=11.2
          - matrix:
              cuda: "11.4"
            packages:
              - cuda-version=11.4
          - matrix:
              cuda: "11.5"
            packages:
              - cuda-version=11.5
          - matrix:
              cuda: "11.8"
            packages:
              - cuda-version=11.8
          - matrix:
              cuda: "12.0"
            packages:
              - cuda-version=12.0
          - matrix:
              cuda: "12.2"
            packages:
              - cuda-version=12.2
  cuda:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - cuda-nvtx-dev
              - cuda-cudart-dev
              - cuda-profiler-api
              - libcublas-dev
              - libcurand-dev
              - libcusolver-dev
              - libcusparse-dev
          - matrix:
              cuda: "11.8"
            packages:
              - cudatoolkit
              - cuda-nvtx=11.8
              - cuda-profiler-api=11.8.86
              - libcublas-dev=11.11.3.6
              - libcublas=11.11.3.6
              - libcurand-dev=10.3.0.86
              - libcurand=10.3.0.86
              - libcusolver-dev=11.4.1.48
              - libcusolver=11.4.1.48
              - libcusparse-dev=11.7.5.86
              - libcusparse=11.7.5.86
          - matrix:
              cuda: "11.5"
            packages:
              - cudatoolkit
              - cuda-nvtx=11.5
              - cuda-profiler-api>=11.4.240,<=11.8.86 # use any `11.x` version since pkg is missing several CUDA/arch packages
              - libcublas-dev>=11.7.3.1,<=11.7.4.6
              - libcublas>=11.7.3.1,<=11.7.4.6
              - libcurand-dev>=10.2.6.48,<=10.2.7.107
              - libcurand>=10.2.6.48,<=10.2.7.107
              - libcusolver-dev>=11.2.1.48,<=11.3.2.107
              - libcusolver>=11.2.1.48,<=11.3.2.107
              - libcusparse-dev>=11.7.0.31,<=11.7.0.107
              - libcusparse>=11.7.0.31,<=11.7.0.107
          - matrix:
              cuda: "11.4"
            packages:
              - cudatoolkit
              - &cudanvtx114 cuda-nvtx=11.4
              - cuda-profiler-api>=11.4.240,<=11.8.86 # use any `11.x` version since pkg is missing several CUDA/arch packages
              - &libcublas_dev114 libcublas-dev>=11.5.2.43,<=11.6.5.2
              - &libcublas114 libcublas>=11.5.2.43,<=11.6.5.2
              - &libcurand_dev114 libcurand-dev>=10.2.5.43,<=10.2.5.120
              - &libcurand114 libcurand>=10.2.5.43,<=10.2.5.120
              - &libcusolver_dev114 libcusolver-dev>=11.2.0.43,<=11.2.0.120
              - &libcusolver114 libcusolver>=11.2.0.43,<=11.2.0.120
              - &libcusparse_dev114 libcusparse-dev>=11.6.0.43,<=11.6.0.120
              - &libcusparse114 libcusparse>=11.6.0.43,<=11.6.0.120
          - matrix:
              cuda: "11.2"
            packages:
              - cudatoolkit
              - *cudanvtx114
              - cuda-profiler-api>=11.4.240,<=11.8.86 # use any `11.x` version since pkg is missing several CUDA/arch packages
              # The NVIDIA channel doesn't publish pkgs older than 11.4 for these libs,
              # so 11.2 uses 11.4 packages (the oldest available).
              - *libcublas_dev114
              - *libcublas114
              - *libcurand_dev114
              - *libcurand114
              - *libcusolver_dev114
              - *libcusolver114
              - *libcusparse_dev114
              - *libcusparse114

  cupy:
    common:
      - output_types: conda
        packages:
          - cupy>=12.0.0
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.*"}
            packages:
              - cupy-cuda12x>=12.0.0
          - matrix: {cuda: "11.*"}
            packages:
              - cupy-cuda11x>=12.0.0
          - {matrix: null, packages: [cupy-cuda11x>=12.0.0]}

  test_libcuvs:
    common:
      - output_types: [conda]
        packages:
          - *cmake_ver
          - openblas
  docs:
    common:
      - output_types: [conda]
        packages:
          - breathe
          - doxygen>=1.8.20
          - graphviz
          - ipython
          - numpydoc
          - pydata-sphinx-theme
          - recommonmark
          - sphinx-copybutton
          - sphinx-markdown-tables
  rust:
    common:
      - output_types: [conda]
        packages:
          - make
          - rust
          # clang/liblclang only needed for bindgen support
          - clang
          - libclang
  build_wheels:
    common:
      - output_types: [requirements, pyproject]
        packages:
          - wheel
          - setuptools
  py_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              py: "3.9"
            packages:
              - python=3.9
          - matrix:
              py: "3.10"
            packages:
              - python=3.10
          - matrix:
              py: "3.11"
            packages:
              - python=3.11
          - matrix:
            packages:
              - python>=3.9,<3.12
  run_py_cuvs:
    common:
      - output_types: [conda, pyproject]
        packages:
          - &numpy numpy>=1.23,<2.0a0
      - output_types: [conda]
        packages:
          - *rmm_conda
          - *pylibraft_conda
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          # This index is needed for cudf and rmm.
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [conda, requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - *cuda_python12
          - matrix:
              cuda: "11.*"
            packages:
              - *cuda_python11
          - matrix:
            packages:
              - *cuda_python
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.*"}
            packages:
              - *pylibraft_cu12
          - matrix: {cuda: "11.*"}
            packages:
              - *pylibraft_cu11
          - {matrix: null, packages: [*pylibraft_conda]}
  test_python_common:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - pytest==7.*
          - pytest-cov
  test_py_cuvs:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - scikit-learn
