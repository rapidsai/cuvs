name: publish

on:
  workflow_call:
  push:
    branches:
      - "pull-request/[0-9]+"

jobs:
  rust-publish:
    runs-on: ubuntu-latest
    container:
      image: rapidsai/ci-conda:latest
    steps:
      - uses: actions/checkout@v4
      - name: Check if release build
        id: check_release
        run: |
          if rapids-is-release-build; then
            echo "is_release=true" >> $GITHUB_OUTPUT
          else
            echo "is_release=true" >> $GITHUB_OUTPUT
          fi
      - name: Install Rust (cargo)
        if: steps.check_release.outputs.is_release == 'true'
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "${HOME}/.cargo/bin" >> $GITHUB_PATH
      - name: Setup environment
        if: steps.check_release.outputs.is_release == 'true'
        run: |
          . /opt/conda/etc/profile.d/conda.sh

          rapids-dependency-file-generator \
            --output conda \
            --file-key rust \
            --matrix "cuda=${RAPIDS_CUDA_VERSION%.*};arch=$(arch);py=${RAPIDS_PY_VERSION}" \
            | tee env.yaml

          rapids-mamba-retry env create --yes -f env.yaml -n rust

          set +eu
          conda activate rust
          set -eu

      - name: Publish sys crate
        if: steps.check_release.outputs.is_release == 'true'
        working-directory: ./rust/cuvs-sys
        run: |
          cargo publish --token ${CARGO_REGISTRY_TOKEN}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.GPUTESTER_CRATES_TOKEN }}
      - name: Wait for crates.io index update
        if: steps.check_release.outputs.is_release == 'true'
        run: sleep 30
      - name: Publish main crate
        if: steps.check_release.outputs.is_release == 'true'
        working-directory: ./rust
        run: |
          cargo publish --token ${CARGO_REGISTRY_TOKEN} --package jawe-cuvs
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.GPUTESTER_CRATES_TOKEN }}
